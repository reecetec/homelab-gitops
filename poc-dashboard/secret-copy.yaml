apiVersion: batch/v1
kind: Job
metadata:
  name: copy-ducklake-secrets
  namespace: dashboards # Target namespace
  annotations:
    # This ArgoCD hook ensures the job runs before the main sync
    argocd.argoproj.io/hook: PreSync
    # This deletes the old job before creating a new one on subsequent syncs
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: secret-copier-sa # Use the ServiceAccount defined below
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Copying postgres-secret..."
          kubectl get secret postgres-secret -n ducklake -o yaml | sed 's/namespace: ducklake/namespace: dashboards/' | kubectl apply -f -
          echo "Copying minio-secret..."
          kubectl get secret minio-secret -n ducklake -o yaml | sed 's/namespace: ducklake/namespace: dashboards/' | kubectl apply -f -
          echo "Secrets copied successfully."
      restartPolicy: Never
  backoffLimit: 1

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-copier-sa
  namespace: dashboards
  annotations: 
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-copier-role
  namespace: dashboards
  annotations: 
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-copier-rb
  namespace: dashboards
  annotations: 
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
subjects:
- kind: ServiceAccount
  name: secret-copier-sa
roleRef:
  kind: Role
  name: secret-copier-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader-role
  namespace: ducklake # Grant permission in the source namespace
  annotations: 
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-rb
  namespace: ducklake # Bind in the source namespace
  annotations: 
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
subjects:
- kind: ServiceAccount
  name: secret-copier-sa
  namespace: dashboards # The SA from the 'dashboards' namespace
roleRef:
  kind: Role
  name: secret-reader-role
  apiGroup: rbac.authorization.k8s.io