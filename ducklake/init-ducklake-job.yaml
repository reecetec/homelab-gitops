---
apiVersion: batch/v1
kind: Job
metadata:
  name: ducklake-init-job
  namespace: ducklake
spec:
  template:
    spec:
      containers:
      - name: ducklake-init
        image: python:3.11-slim
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -e
          echo "Installing dependencies..."
          pip install duckdb psycopg2-binary boto3
          
          echo "Running DuckLake initialization script..."
          python <<'EOF'
          import duckdb
          import os
          import sys

          # Get PG config
          pg_user = os.getenv("POSTGRES_USER")
          pg_password = os.getenv("POSTGRES_PASSWORD")
          pg_db = os.getenv("POSTGRES_DB")
          pg_host = "postgres.ducklake.svc.cluster.local"
          
          # Get S3 config
          s3_endpoint = "http://minio-svc.ducklake.svc.cluster.local:9000"
          s3_access_key = os.getenv("MINIO_ROOT_USER")
          s3_secret_key = os.getenv("MINIO_ROOT_PASSWORD")
          data_path = os.getenv("DUCKLAKE_DATA_PATH") # Now "s3://ducklake/data"

          # Connect and configure S3 access for DuckDB
          con = duckdb.connect()
          con.execute(f"SET s3_endpoint='{s3_endpoint.split('//')[1]}';")
          con.execute(f"SET s3_access_key_id='{s3_access_key}';")
          con.execute(f"SET s3_secret_access_key='{s3_secret_key}';")
          con.execute("SET s3_url_style='path';")
          con.execute("SET s3_use_ssl=false;")

          # Construct DSN and ATTACH command
          dsn = f"dbname={pg_db} user={pg_user} password={pg_password} host={pg_host} port=5432"
          attach_sql = f"""
          INSTALL ducklake;
          LOAD ducklake;
          ATTACH 'ducklake:postgres:{dsn}' AS prod_lake (DATA_PATH '{data_path}');
          """
          con.execute(attach_sql)
          print("Successfully attached DuckLake catalog with S3 backend.")
          
          # Verify
          con.execute("USE prod_lake;")
          tables = con.execute("SHOW TABLES;").fetchall()
          print("Tables in prod_lake:", tables)
          print("Initialization complete.")
          EOF

        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: DUCKLAKE_DATA_PATH
          valueFrom:
            configMapKeyRef:
              name: ducklake-config
              key: DUCKLAKE_DATA_PATH
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: MINIO_ROOT_PASSWORD
      restartPolicy: OnFailure
  backoffLimit: 4